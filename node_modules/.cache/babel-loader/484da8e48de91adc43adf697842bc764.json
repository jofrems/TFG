{"ast":null,"code":"import { gamePost } from \"www/store/game/gamePost\";\nimport { HALT_ORDERED, SAIL_ORDERED } from \"./types\";\nexport const componentSailMiddleware = store => next => async action => {\n  next(action);\n  if (action.type === SAIL_ORDERED) await orderSail(store, action);\n  if (action.type === HALT_ORDERED) await orderHalt(store, action);\n};\n\nasync function orderSail(store, action) {\n  await gamePost(store, `/api/v1/sails/${action.entityId}/sail`, action.form);\n}\n\nasync function orderHalt(store, action) {\n  await gamePost(store, `/api/v1/sails/${action.entityId}/halt`, {});\n}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG_Catan/src/www/components/SailComponent/middleware.ts"],"names":["gamePost","HALT_ORDERED","SAIL_ORDERED","componentSailMiddleware","store","next","action","type","orderSail","orderHalt","entityId","form"],"mappings":"AAEA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAGEC,YAHF,EAKEC,YALF,QAMO,SANP;AAQA,OAAO,MAAMC,uBAAiD,GAC3DC,KAAD,IAAiBC,IAAD,IAAU,MAAOC,MAAP,IAA4C;AACpED,EAAAA,IAAI,CAACC,MAAD,CAAJ;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBL,YAApB,EAAkC,MAAMM,SAAS,CAACJ,KAAD,EAAQE,MAAR,CAAf;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgBN,YAApB,EAAkC,MAAMQ,SAAS,CAACL,KAAD,EAAQE,MAAR,CAAf;AACnC,CANI;;AAQP,eAAeE,SAAf,CAAyBJ,KAAzB,EAAqCE,MAArC,EAAgE;AAC9D,QAAMN,QAAQ,CAACI,KAAD,EAAS,iBAAgBE,MAAM,CAACI,QAAS,OAAzC,EAAiDJ,MAAM,CAACK,IAAxD,CAAd;AACD;;AAED,eAAeF,SAAf,CAAyBL,KAAzB,EAAqCE,MAArC,EAAgE;AAC9D,QAAMN,QAAQ,CAACI,KAAD,EAAS,iBAAgBE,MAAM,CAACI,QAAS,OAAzC,EAAiD,EAAjD,CAAd;AACD","sourcesContent":["import { Middleware } from \"redux\";\nimport { AppState } from \"www/store\";\nimport { gamePost } from \"www/store/game/gamePost\";\nimport {\n  ComponentSailActionTypes,\n  HaltOrderedAction,\n  HALT_ORDERED,\n  SailOrderedAction,\n  SAIL_ORDERED,\n} from \"./types\";\n\nexport const componentSailMiddleware: Middleware<{}, AppState> =\n  (store: any) => (next) => async (action: ComponentSailActionTypes) => {\n    next(action);\n\n    if (action.type === SAIL_ORDERED) await orderSail(store, action);\n    if (action.type === HALT_ORDERED) await orderHalt(store, action);\n  };\n\nasync function orderSail(store: any, action: SailOrderedAction) {\n  await gamePost(store, `/api/v1/sails/${action.entityId}/sail`, action.form);\n}\n\nasync function orderHalt(store: any, action: HaltOrderedAction) {\n  await gamePost(store, `/api/v1/sails/${action.entityId}/halt`, {});\n}\n"]},"metadata":{},"sourceType":"module"}