{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/HexComponent.tsx\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hex = styled.polygon`\ncursor: pointer;\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\ntransform: rotate(30deg);\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n`; //transform-origin: 50% 50%;\n//transform: rotate(30deg);\n\n_c = Hex;\nexport function HexComponent({\n  entity\n}) {\n  if (entity.type === \"tile\") {\n    var SEA = -1;\n    var DESSERT = -2;\n    var LUMBER = 0;\n    var GRAIN = 1;\n    var WOOL = 2;\n    var BRICK = 3;\n    var ORE = 4;\n    var x = [0, 37, 112, 150, 112, 37];\n    var y = [75, 10, 10, 75, 140, 140];\n    var xOffsetDeg = 113 * entity.column;\n    var yOffsetDeg = 65 * entity.row;\n    var xJump = 113 * entity.row;\n    var yJump = 65 * entity.column;\n    var finalLoc = `${x[0] + xJump - 300 + xOffsetDeg},${y[0] + yJump - yOffsetDeg - 75} ${x[1] + xJump + xOffsetDeg - 300},${y[1] + yJump - yOffsetDeg - 75} ${x[2] + xJump + xOffsetDeg - 300},${y[2] + yJump - yOffsetDeg - 75} ${x[3] + xJump + xOffsetDeg - 300},${y[3] + yJump - yOffsetDeg - 75} ${x[4] + xJump + xOffsetDeg - 300},${y[4] + yJump - yOffsetDeg - 75} ${x[5] + xJump + xOffsetDeg - 300},${y[5] + yJump - yOffsetDeg - 75}`;\n    var xTextOffset = 130 * entity.row + entity.column * 60 - 200;\n    var textX = `${x[0] + xTextOffset}`;\n    var textY = `${y[0] + 115 * entity.column - 180}`;\n    var color = \"\";\n\n    switch (entity.TileType) {\n      case DESSERT:\n        color = \"#663300\";\n        break;\n\n      case SEA:\n        color = \"#0080FF\";\n        break;\n\n      case LUMBER:\n        color = \"#006600\";\n        break;\n\n      case GRAIN:\n        color = \"#FFFF33\";\n        break;\n\n      case WOOL:\n        color = \"#80FF00\";\n        break;\n\n      case BRICK:\n        color = \"#FF9933\";\n        break;\n\n      case ORE:\n        color = \"#C0C0C0\";\n        break;\n\n      default:\n        color = \"#000000\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      id: \"hex\",\n      children: [/*#__PURE__*/_jsxDEV(Hex, {\n        fill: color,\n        points: finalLoc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: textX,\n        y: textY,\n        children: [\" \", entity.TileWeight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n  return \"\";\n}\n_c2 = HexComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hex\");\n$RefreshReg$(_c2, \"HexComponent\");","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/HexComponent.tsx"],"names":["styled","Hex","polygon","HexComponent","entity","type","SEA","DESSERT","LUMBER","GRAIN","WOOL","BRICK","ORE","x","y","xOffsetDeg","column","yOffsetDeg","row","xJump","yJump","finalLoc","xTextOffset","textX","textY","color","TileType","TileWeight"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\n\n\nconst Hex = styled.polygon`\ncursor: pointer;\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\ntransform: rotate(30deg);\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n`\n//transform-origin: 50% 50%;\n\n//transform: rotate(30deg);\n\n\n\nexport function HexComponent({ entity }: any) {\n  if(entity.type === \"tile\"){\n\n  var SEA = -1;\n  var DESSERT = -2;\n  var LUMBER = 0;\n  var GRAIN = 1;\n  var WOOL = 2;\n  var BRICK = 3;\n  var ORE = 4;\n\n  var x = [0,37,112,150,112,37];\n  var y = [75,10,10,75,140,140];\n\n  var xOffsetDeg = 113*entity.column;\n  var yOffsetDeg = 65*entity.row;\n  var xJump = 113*entity.row;\n  var yJump = 65*entity.column;\n  var finalLoc = `${x[0]+ xJump -300+ xOffsetDeg},${y[0]+yJump-yOffsetDeg-75} ${x[1]+xJump + xOffsetDeg-300},${y[1]+yJump-yOffsetDeg-75} ${x[2]+xJump + xOffsetDeg -300},${y[2]+yJump-yOffsetDeg-75} ${x[3]+xJump + xOffsetDeg-300},${y[3]+yJump-yOffsetDeg-75} ${x[4]+xJump + xOffsetDeg -300},${y[4]+yJump-yOffsetDeg-75} ${x[5]+xJump + xOffsetDeg-300},${y[5]+yJump-yOffsetDeg-75}`\n  var xTextOffset = 130*entity.row + entity.column*60-200; \n  var textX = `${x[0]+ xTextOffset}`;\n  var textY = `${y[0]+115*entity.column-180}`;\n  var color = \"\";\n\n      switch(entity.TileType){\n        case DESSERT:\n          color=\"#663300\";\n          break;\n        case SEA:\n          color=\"#0080FF\";\n          break;\n        case LUMBER:\n          color=\"#006600\";\n          break;\n        case GRAIN:\n          color=\"#FFFF33\";\n          break;\n        case WOOL:\n          color=\"#80FF00\";\n          break;\n        case BRICK:\n          color=\"#FF9933\";\n          break;\n        case ORE:\n          color=\"#C0C0C0\";\n          break;\n        default:\n          color=\"#000000\";\n      }    \n      return (\n        <g id=\"hex\">\n          <Hex fill={color} points={finalLoc}></Hex>\n          <text x={textX} y={textY}> {entity.TileWeight}</text>\n        </g>    \n    );  \n  }\n  return(\"\");\n}\n"]},"metadata":{},"sourceType":"module"}