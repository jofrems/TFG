{"ast":null,"code":"import{useCallback,useMemo}from\"react\";import{gameJoined,gamePlayed}from\"www/store/game/actions\";import{useAppDispatch,useAppSelector}from\"www/store/hooks\";import{getPlayerName}from\"www/store/player/selectors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function GamesListItem(_ref){var item=_ref.item;var dispatch=useAppDispatch();var join=useCallback(function(){return dispatch(gameJoined(item.gameName,item.creatorName));},[dispatch,item]);var play=useCallback(function(){return dispatch(gamePlayed(item.gameName,item.creatorName));},[dispatch,item]);var currentPlayer=useAppSelector(getPlayerName);var isPlaying=useMemo(function(){return item.joinedPlayerNames.includes(currentPlayer);},[item,currentPlayer]);return/*#__PURE__*/_jsxs(\"li\",{children:[\"Game \",item.gameName,\" by \",item.creatorName,isPlaying&&\" (joined) \",/*#__PURE__*/_jsx(\"button\",{onClick:join,children:\"Join\"}),/*#__PURE__*/_jsx(\"button\",{onClick:play,children:\"Play\"})]});}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/GamesListScreen/GamesListItem.tsx"],"names":["useCallback","useMemo","gameJoined","gamePlayed","useAppDispatch","useAppSelector","getPlayerName","GamesListItem","item","dispatch","join","gameName","creatorName","play","currentPlayer","isPlaying","joinedPlayerNames","includes"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,OAAtB,KAAqC,OAArC,CACA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,wBAAvC,CAEA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,iBAA/C,CACA,OAASC,aAAT,KAA8B,4BAA9B,C,wFAEA,MAAO,SAASC,CAAAA,aAAT,MAAgD,IAAvBC,CAAAA,IAAuB,MAAvBA,IAAuB,CACrD,GAAMC,CAAAA,QAAQ,CAAGL,cAAc,EAA/B,CACA,GAAMM,CAAAA,IAAI,CAAGV,WAAW,CACtB,iBAAMS,CAAAA,QAAQ,CAACP,UAAU,CAACM,IAAI,CAACG,QAAN,CAAgBH,IAAI,CAACI,WAArB,CAAX,CAAd,EADsB,CAEtB,CAACH,QAAD,CAAWD,IAAX,CAFsB,CAAxB,CAIA,GAAMK,CAAAA,IAAI,CAAGb,WAAW,CACtB,iBAAMS,CAAAA,QAAQ,CAACN,UAAU,CAACK,IAAI,CAACG,QAAN,CAAgBH,IAAI,CAACI,WAArB,CAAX,CAAd,EADsB,CAEtB,CAACH,QAAD,CAAWD,IAAX,CAFsB,CAAxB,CAIA,GAAMM,CAAAA,aAAa,CAAGT,cAAc,CAACC,aAAD,CAApC,CACA,GAAMS,CAAAA,SAAS,CAAGd,OAAO,CACvB,iBAAMO,CAAAA,IAAI,CAACQ,iBAAL,CAAuBC,QAAvB,CAAgCH,aAAhC,CAAN,EADuB,CAEvB,CAACN,IAAD,CAAOM,aAAP,CAFuB,CAAzB,CAKA,mBACE,8BACQN,IAAI,CAACG,QADb,QAC2BH,IAAI,CAACI,WADhC,CAEGG,SAAS,EAAI,YAFhB,cAGE,eAAQ,OAAO,CAAEL,IAAjB,kBAHF,cAIE,eAAQ,OAAO,CAAEG,IAAjB,kBAJF,GADF,CAQD","sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { gameJoined, gamePlayed } from \"www/store/game/actions\";\nimport { GamesListItem as GLI } from \"www/store/gamesList/types\";\nimport { useAppDispatch, useAppSelector } from \"www/store/hooks\";\nimport { getPlayerName } from \"www/store/player/selectors\";\n\nexport function GamesListItem({ item }: { item: GLI }) {\n  const dispatch = useAppDispatch();\n  const join = useCallback(\n    () => dispatch(gameJoined(item.gameName, item.creatorName)),\n    [dispatch, item]\n  );\n  const play = useCallback(\n    () => dispatch(gamePlayed(item.gameName, item.creatorName)),\n    [dispatch, item]\n  );\n  const currentPlayer = useAppSelector(getPlayerName)!;\n  const isPlaying = useMemo(\n    () => item.joinedPlayerNames.includes(currentPlayer),\n    [item, currentPlayer]\n  );\n\n  return (\n    <li>\n      Game {item.gameName} by {item.creatorName}\n      {isPlaying && \" (joined) \"}\n      <button onClick={join}>Join</button>\n      <button onClick={play}>Play</button>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}