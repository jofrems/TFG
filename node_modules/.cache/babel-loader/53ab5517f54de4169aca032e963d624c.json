{"ast":null,"code":"import { fetchAndDispatchMessage } from \"www/widgets/MessageWidget/fetchAndDispatchMessage\";\nimport { LOGGED_IN, SIGNED_UP } from \"./types\";\nimport { loadingFinished, loadingStarted } from \"www/widgets/LoadingWidget/actions\";\nimport { screenPushed } from \"www/widgets/ScreenStackWidget/actions\";\nimport { playerReplaced } from \"./actions\";\nexport const playerMiddleware = store => next => async action => {\n  next(action);\n\n  if (action.type === LOGGED_IN) {\n    await login(store, action);\n  }\n\n  if (action.type === SIGNED_UP) {\n    await signup(store, action);\n  }\n};\n\nasync function login(store, action) {\n  store.dispatch(loadingStarted());\n  var result = await fetchAndDispatchMessage(\"/api/v1/players/login\", {\n    method: \"POST\",\n    body: action.form\n  }, store.dispatch);\n\n  if (!result.isError) {\n    store.dispatch(screenPushed(\"player\"));\n    store.dispatch(playerReplaced(result.playerName, result.token));\n  }\n\n  store.dispatch(loadingFinished());\n}\n\nasync function signup(store, action) {\n  store.dispatch(loadingStarted());\n  var result = await fetchAndDispatchMessage(\"/api/v1/players\", {\n    method: \"POST\",\n    body: action.form\n  }, store.dispatch);\n  if (!result.isError) store.dispatch(screenPushed(\"welcome\"));\n  store.dispatch(loadingFinished());\n}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG_Catan/src/www/store/player/middleware.ts"],"names":["fetchAndDispatchMessage","LOGGED_IN","SIGNED_UP","loadingFinished","loadingStarted","screenPushed","playerReplaced","playerMiddleware","store","next","action","type","login","signup","dispatch","result","method","body","form","isError","playerName","token"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,mDAAxC;AAGA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,SAArC;AACA,SACEC,eADF,EAEEC,cAFF,QAGO,mCAHP;AAIA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAO,MAAMC,gBAA0C,GACpDC,KAAD,IAAiBC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AAC1CD,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBV,SAApB,EAA+B;AAC7B,UAAMW,KAAK,CAACJ,KAAD,EAAQE,MAAR,CAAX;AACD;;AACD,MAAIA,MAAM,CAACC,IAAP,KAAgBT,SAApB,EAA+B;AAC7B,UAAMW,MAAM,CAACL,KAAD,EAAQE,MAAR,CAAZ;AACD;AACF,CAVI;;AAYP,eAAeE,KAAf,CAAqBJ,KAArB,EAAsCE,MAAtC,EAAmD;AACjDF,EAAAA,KAAK,CAACM,QAAN,CAAeV,cAAc,EAA7B;AACA,MAAIW,MAAM,GAAG,MAAMf,uBAAuB,CACxC,uBADwC,EAExC;AAAEgB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,IAAI,EAAEP,MAAM,CAACQ;AAA/B,GAFwC,EAGxCV,KAAK,CAACM,QAHkC,CAA1C;;AAKA,MAAI,CAACC,MAAM,CAACI,OAAZ,EAAqB;AACnBX,IAAAA,KAAK,CAACM,QAAN,CAAeT,YAAY,CAAC,QAAD,CAA3B;AACAG,IAAAA,KAAK,CAACM,QAAN,CAAeR,cAAc,CAACS,MAAM,CAACK,UAAR,EAAoBL,MAAM,CAACM,KAA3B,CAA7B;AACD;;AACDb,EAAAA,KAAK,CAACM,QAAN,CAAeX,eAAe,EAA9B;AACD;;AAED,eAAeU,MAAf,CAAsBL,KAAtB,EAAkCE,MAAlC,EAA+C;AAC7CF,EAAAA,KAAK,CAACM,QAAN,CAAeV,cAAc,EAA7B;AACA,MAAIW,MAAM,GAAG,MAAMf,uBAAuB,CACxC,iBADwC,EAExC;AAAEgB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,IAAI,EAAEP,MAAM,CAACQ;AAA/B,GAFwC,EAGxCV,KAAK,CAACM,QAHkC,CAA1C;AAKA,MAAI,CAACC,MAAM,CAACI,OAAZ,EAAqBX,KAAK,CAACM,QAAN,CAAeT,YAAY,CAAC,SAAD,CAA3B;AACrBG,EAAAA,KAAK,CAACM,QAAN,CAAeX,eAAe,EAA9B;AACD","sourcesContent":["import { fetchAndDispatchMessage } from \"www/widgets/MessageWidget/fetchAndDispatchMessage\";\nimport { Middleware } from \"redux\";\nimport { AppState, AppStore } from \"www/store\";\nimport { LOGGED_IN, SIGNED_UP } from \"./types\";\nimport {\n  loadingFinished,\n  loadingStarted,\n} from \"www/widgets/LoadingWidget/actions\";\nimport { screenPushed } from \"www/widgets/ScreenStackWidget/actions\";\nimport { playerReplaced } from \"./actions\";\n\nexport const playerMiddleware: Middleware<{}, AppState> =\n  (store: any) => (next) => async (action) => {\n    next(action);\n\n    if (action.type === LOGGED_IN) {\n      await login(store, action);\n    }\n    if (action.type === SIGNED_UP) {\n      await signup(store, action);\n    }\n  };\n\nasync function login(store: AppStore, action: any) {\n  store.dispatch(loadingStarted());\n  var result = await fetchAndDispatchMessage(\n    \"/api/v1/players/login\",\n    { method: \"POST\", body: action.form },\n    store.dispatch\n  );\n  if (!result.isError) {\n    store.dispatch(screenPushed(\"player\"));\n    store.dispatch(playerReplaced(result.playerName, result.token));\n  }\n  store.dispatch(loadingFinished());\n}\n\nasync function signup(store: any, action: any) {\n  store.dispatch(loadingStarted());\n  var result = await fetchAndDispatchMessage(\n    \"/api/v1/players\",\n    { method: \"POST\", body: action.form },\n    store.dispatch\n  );\n  if (!result.isError) store.dispatch(screenPushed(\"welcome\"));\n  store.dispatch(loadingFinished());\n}\n"]},"metadata":{},"sourceType":"module"}