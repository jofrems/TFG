{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/TFG/src/www/components/DockComponent/DockedComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"www/store/hooks\";\nimport { screenPushed } from \"www/widgets/ScreenStackWidget/actions\";\nimport { makeGetDockByLocation } from \"./selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DockedComponent({\n  entity\n}) {\n  _s();\n\n  const getDockByLocation = useMemo(makeGetDockByLocation, []);\n  const dock = useAppSelector(state => getDockByLocation(state, entity));\n  const dispatch = useAppDispatch();\n  const seeTheDock = useCallback(() => dispatch(screenPushed(\"entity\", dock.id)), [dock, dispatch]);\n  if (entity.isDock || !dock) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Docked at: \", dock.type, \"\\xA0\", dock.name, \"\\xA0of \", dock.owner, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: seeTheDock,\n      children: \"See the dock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DockedComponent, \"pUY8gG/g+LYZH6EhjIO/gF+cihk=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = DockedComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DockedComponent\");","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/components/DockComponent/DockedComponent.tsx"],"names":["useCallback","useMemo","useAppDispatch","useAppSelector","screenPushed","makeGetDockByLocation","DockedComponent","entity","getDockByLocation","dock","state","dispatch","seeTheDock","id","isDock","type","name","owner"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,qBAAT,QAAsC,aAAtC;;AAEA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA0C;AAAA;;AAC/C,QAAMC,iBAAiB,GAAGP,OAAO,CAACI,qBAAD,EAAwB,EAAxB,CAAjC;AACA,QAAMI,IAAI,GAAGN,cAAc,CAAEO,KAAD,IAAWF,iBAAiB,CAACE,KAAD,EAAQH,MAAR,CAA7B,CAA3B;AACA,QAAMI,QAAQ,GAAGT,cAAc,EAA/B;AACA,QAAMU,UAAU,GAAGZ,WAAW,CAC5B,MAAMW,QAAQ,CAACP,YAAY,CAAC,QAAD,EAAWK,IAAI,CAACI,EAAhB,CAAb,CADc,EAE5B,CAACJ,IAAD,EAAOE,QAAP,CAF4B,CAA9B;AAKA,MAAIJ,MAAM,CAACO,MAAP,IAAiB,CAACL,IAAtB,EAA4B,OAAO,IAAP;AAE5B,sBACE;AAAA,8BACcA,IAAI,CAACM,IADnB,UAC0BN,IAAI,CAACO,IAD/B,aACyCP,IAAI,CAACQ,KAD9C,uBAGE;AAAQ,MAAA,OAAO,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAlBeN,e;UAEDH,c,EACID,c;;;KAHHI,e","sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"www/store/hooks\";\nimport { screenPushed } from \"www/widgets/ScreenStackWidget/actions\";\nimport { makeGetDockByLocation } from \"./selectors\";\n\nexport function DockedComponent({ entity }: any) {\n  const getDockByLocation = useMemo(makeGetDockByLocation, []);\n  const dock = useAppSelector((state) => getDockByLocation(state, entity));\n  const dispatch = useAppDispatch();\n  const seeTheDock = useCallback(\n    () => dispatch(screenPushed(\"entity\", dock.id)),\n    [dock, dispatch]\n  );\n\n  if (entity.isDock || !dock) return null;\n\n  return (\n    <div>\n      Docked at: {dock.type} {dock.name} of {dock.owner}\n      &nbsp;\n      <button onClick={seeTheDock}>See the dock</button>.\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}