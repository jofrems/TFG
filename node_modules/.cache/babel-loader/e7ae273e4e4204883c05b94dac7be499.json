{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jeff/Desktop/TFG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jeff/Desktop/TFG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{fetchAndDispatchMessage}from\"www/widgets/MessageWidget/fetchAndDispatchMessage\";import{loadingFinished,loadingStarted}from\"www/widgets/LoadingWidget/actions\";import{getPlayerToken}from\"../player/selectors\";import{gameReplaced}from\"./actions\";export function gamePost(_x,_x2,_x3){return _gamePost.apply(this,arguments);}function _gamePost(){_gamePost=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(store,url,body){var success,token,result,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:success=_args.length>3&&_args[3]!==undefined?_args[3]:function(){};store.dispatch(loadingStarted());token=getPlayerToken(store.getState());_context.next=5;return fetchAndDispatchMessage(\"\".concat(url,\"?token=\").concat(token),{method:\"POST\",body:body},store.dispatch);case 5:result=_context.sent;store.dispatch(gameReplaced(result));_context.next=9;return success(result);case 9:store.dispatch(loadingFinished());case 10:case\"end\":return _context.stop();}}},_callee);}));return _gamePost.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/store/game/gamePost.tsx"],"names":["fetchAndDispatchMessage","loadingFinished","loadingStarted","getPlayerToken","gameReplaced","gamePost","store","url","body","success","dispatch","token","getState","method","result"],"mappings":"yRAAA,OAASA,uBAAT,KAAwC,mDAAxC,CACA,OACEC,eADF,CAEEC,cAFF,KAGO,mCAHP,CAIA,OAASC,cAAT,KAA+B,qBAA/B,CACA,OAASC,YAAT,KAA6B,WAA7B,CAGA,eAAsBC,CAAAA,QAAtB,qD,uFAAO,iBACLC,KADK,CAELC,GAFK,CAGLC,IAHK,2JAILC,OAJK,+CAIgD,UAAM,CAAE,CAJxD,CAMLH,KAAK,CAACI,QAAN,CAAeR,cAAc,EAA7B,EACMS,KAPD,CAOSR,cAAc,CAACG,KAAK,CAACM,QAAN,EAAD,CAPvB,uBAQgBZ,CAAAA,uBAAuB,WACvCO,GADuC,mBAC1BI,KAD0B,EAE1C,CAAEE,MAAM,CAAE,MAAV,CAAkBL,IAAI,CAAJA,IAAlB,CAF0C,CAG1CF,KAAK,CAACI,QAHoC,CARvC,QAQCI,MARD,eAcLR,KAAK,CAACI,QAAN,CAAeN,YAAY,CAACU,MAAD,CAA3B,EAdK,sBAeCL,CAAAA,OAAO,CAACK,MAAD,CAfR,QAiBLR,KAAK,CAACI,QAAN,CAAeT,eAAe,EAA9B,EAjBK,uD","sourcesContent":["import { fetchAndDispatchMessage } from \"www/widgets/MessageWidget/fetchAndDispatchMessage\";\nimport {\n  loadingFinished,\n  loadingStarted,\n} from \"www/widgets/LoadingWidget/actions\";\nimport { getPlayerToken } from \"../player/selectors\";\nimport { gameReplaced } from \"./actions\";\nimport { GameState } from \"./types\";\n\nexport async function gamePost(\n  store: any,\n  url: string,\n  body: any,\n  success: (game: GameState) => Promise<void> | void = () => {}\n) {\n  store.dispatch(loadingStarted());\n  const token = getPlayerToken(store.getState());\n  const result = await fetchAndDispatchMessage(\n    `${url}?token=${token}`,\n    { method: \"POST\", body },\n    store.dispatch\n  );\n\n  store.dispatch(gameReplaced(result));\n  await success(result);\n\n  store.dispatch(loadingFinished());\n}\n"]},"metadata":{},"sourceType":"module"}