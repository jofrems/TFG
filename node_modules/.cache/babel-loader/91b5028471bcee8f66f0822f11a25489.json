{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jeff/Desktop/TFG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import styled from\"styled-components\";import{useAppSelector,useDispatchFormBig}from\"www/store/hooks\";import{getPlayerName}from\"www/store/player/selectors\";import{own}from\"../../components/OwnComponent/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";var Vertex=styled.circle(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\ncursor: pointer;\\n\"])));var UpgradedVertex=styled.rect(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\ncursor: pointer;\\n\"])));/*\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n*/ //transform-origin: 50% 50%;\n//transform: rotate(30deg);\nexport function VertexComponent(_ref){var entity=_ref.entity;var currentPlayer=useAppSelector(getPlayerName);var owned=useDispatchFormBig(own,entity.id,currentPlayer);if(entity.type!==\"vertex\")return null;var xOffset=entity.row*65+66;var yOffset=entity.column*32;if(entity.column>1)yOffset=yOffset+45;if(entity.column>3)yOffset=yOffset+50;if(entity.column>5)yOffset=yOffset+50;if(entity.column>7)yOffset=yOffset+50;if(entity.column>9)yOffset=yOffset+50;var xPos=xOffset+290;var yPos=yOffset+115;var entityId=entity.id;//generem un color pel jugador aleatoriament\nvar colour='#';if(entity.owner!=null){var hash=0;for(var i=0;i<entity.owner.length;i++){hash=entity.owner.charCodeAt(i)+((hash<<5)-hash);}for(var i=0;i<3;i++){var value=hash>>i*8&0xFF;colour+=('00'+value.toString(16)).substr(-2);}}else{colour=\"white\";}if(entity.upgraded){xPos=xPos-20;yPos=yPos-20;return/*#__PURE__*/_jsx(\"g\",{id:\"vertex\",children:/*#__PURE__*/_jsx(UpgradedVertex,{id:entityId,x:xPos,y:yPos,width:\"40\",height:\"40\",stroke:\"black\",\"stroke-width\":\"3\",fill:colour,onClick:owned})});}return/*#__PURE__*/_jsx(\"g\",{id:\"vertex\",children:/*#__PURE__*/_jsx(Vertex,{id:entityId,cx:xPos,cy:yPos,r:\"20\",stroke:\"black\",\"stroke-width\":\"3\",strokeWidth:entity.owner!=null?3:0,fill:entity.owner!=null?colour:\"white\",fillOpacity:entity.owner!=null?1:0,onClick:owned})});}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/VertexComponent.tsx"],"names":["styled","useAppSelector","useDispatchFormBig","getPlayerName","own","Vertex","circle","UpgradedVertex","rect","VertexComponent","entity","currentPlayer","owned","id","type","xOffset","row","yOffset","column","xPos","yPos","entityId","colour","owner","hash","i","length","charCodeAt","value","toString","substr","upgraded"],"mappings":"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","sourcesContent":["\nimport styled from \"styled-components\";\nimport { useAppSelector, useDispatchFormBig } from \"www/store/hooks\";\nimport { getPlayerName } from \"www/store/player/selectors\";\nimport { own } from \"../../components/OwnComponent/actions\";\n\nconst Vertex = styled.circle`\ncursor: pointer;\n`\n\nconst UpgradedVertex = styled.rect`\ncursor: pointer;\n`\n\n/*\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n*/\n//transform-origin: 50% 50%;\n\n//transform: rotate(30deg);\n\n\n\nexport function VertexComponent({ entity }: any) { \n  const currentPlayer = useAppSelector(getPlayerName);\n  const owned = useDispatchFormBig(own, entity.id, currentPlayer);\n\n  if(entity.type !== \"vertex\") return null;\n\n\n    var xOffset = entity.row*65 +66;\n\n    var yOffset = entity.column*32;\n\n\n    if(entity.column > 1)\n        yOffset = yOffset + 45;\n    if(entity.column > 3)\n        yOffset = yOffset + 50;\n    if(entity.column > 5)\n        yOffset = yOffset + 50;\n    if(entity.column > 7)\n        yOffset = yOffset + 50;\n    if(entity.column > 9)\n        yOffset = yOffset + 50;\n    \n    var xPos = xOffset + 290;\n    var yPos = yOffset +115;\n    var entityId = entity.id;\n\n    //generem un color pel jugador aleatoriament\n    var colour= '#';\n\n    if(entity.owner != null){\n        var hash = 0;\n        for (var i = 0; i < entity.owner!.length; i++) {\n            hash = entity.owner!.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        for (var i = 0; i < 3; i++) {\n             var value = (hash >> (i * 8)) & 0xFF;\n            colour += ('00' + value.toString(16)).substr(-2);\n        }\n    }else{\n        colour = \"white\"\n    }\n    \n  if(entity.upgraded){\n    xPos = xPos-20;\n    yPos = yPos -20;\n    return (\n        <g id=\"vertex\">\n          <UpgradedVertex id={entityId} x={xPos} y={yPos} width=\"40\" height=\"40\" stroke=\"black\" stroke-width=\"3\" fill={colour}  onClick={owned}></UpgradedVertex>\n        </g>    \n    ); \n  }\n  return (\n      <g id=\"vertex\">\n        <Vertex id={entityId} cx={xPos} cy={yPos} r=\"20\" stroke=\"black\" stroke-width=\"3\" strokeWidth={entity.owner != null ? 3 : 0  } fill={entity.owner != null ? colour : \"white\"} fillOpacity={entity.owner != null ? 1 : 0} onClick={owned}></Vertex>\n      </g>    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}