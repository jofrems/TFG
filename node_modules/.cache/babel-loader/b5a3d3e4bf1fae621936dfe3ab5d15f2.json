{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/HexComponent.tsx\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hex = styled.polygon`\ncursor: pointer;\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\ntransform-origin: 50% 50%;\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n`; //transform: rotate(30deg);\n\n_c = Hex;\nexport function HexComponent({\n  entity\n}) {\n  var SEA = -1;\n  var DESSERT = -2;\n  var LUMBER = 0;\n  var GRAIN = 1;\n  var WOOL = 2;\n  var BRICK = 3;\n  var ORE = 4;\n  var mapSize = 7;\n  var locations = new Array(7).fill(new Array(7).fill(`#`));\n  console.log(locations[3][0]); //var rowLocations = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\n  var x = [0, 37, 112, 150, 112, 37];\n  var y = [75, 10, 10, 75, 140, 140];\n\n  for (var i = 0; i < mapSize; i++) {\n    //locations.push(rowLocations);\n    for (var j = 0; j < mapSize; j++) {\n      var auxString = `${x[0]},${y[0]} ${x[1]},${y[1]} ${x[2]},${y[2]} ${x[3]},${y[3]} ${x[4]},${y[4]} ${x[5]},${y[5]}`;\n      locations[j][i] = auxString;\n\n      for (var k = 0; k < x.length; k++) {\n        var auxX = x[k] + 100;\n        x[k] = auxX;\n      }\n    }\n\n    x = [0, 37, 112, 150, 112, 37];\n\n    for (var l = 0; l < y.length; l++) {\n      var auxY = y[l];\n      y[l] = auxY;\n    }\n  } //var locations = [[0,1,2,\"0,75 37,10 112,10 150,75 112,140 37,140\",  \"30,75 67,10 142,10 180,75 142,140 67,140\",   \"60,75 97,10 172,10 210,75 172,140 97,140\",   \"0,75 37,10 112,10 150,75 112,140 37,140\"pos7]]\n\n\n  var color = \"\";\n  var locX = 0;\n  var locY = 0;\n\n  if (entity.type === \"tile\") {\n    switch (entity.TileType) {\n      case DESSERT:\n        color = \"#663300\";\n        break;\n\n      case SEA:\n        color = \"#663300\";\n        break;\n\n      case LUMBER:\n        color = \"#663300\";\n        break;\n\n      case GRAIN:\n        color = \"#663300\";\n        break;\n\n      case WOOL:\n        color = \"#663300\";\n        break;\n\n      case BRICK:\n        color = \"#663300\";\n        break;\n\n      case ORE:\n        color = \"#663300\";\n        break;\n\n      default:\n        color = \"#000000\";\n    }\n\n    locX = entity.row;\n    locY = entity.column;\n    console.log(locations);\n    console.log(`especific loc:` + locations[locX][locY]);\n    console.log(`entity row: ` + entity.row + ` entity column:` + entity.column);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"hex\",\n    children: [/*#__PURE__*/_jsxDEV(Hex, {\n      fill: color,\n      points: locations[locX][locY]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"700\",\n      y: \"700\",\n      children: [\" \", entity.TileWeight]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n}\n_c2 = HexComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hex\");\n$RefreshReg$(_c2, \"HexComponent\");","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/HexComponent.tsx"],"names":["styled","Hex","polygon","HexComponent","entity","SEA","DESSERT","LUMBER","GRAIN","WOOL","BRICK","ORE","mapSize","locations","Array","fill","console","log","x","y","i","j","auxString","k","length","auxX","l","auxY","color","locX","locY","type","TileType","row","column","TileWeight"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\n\n\nconst Hex = styled.polygon`\ncursor: pointer;\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\ntransform-origin: 50% 50%;\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n`\n\n//transform: rotate(30deg);\n\n\n\nexport function HexComponent({ entity }: any) {\n  var SEA = -1;\n  var DESSERT = -2;\n  var LUMBER = 0;\n  var GRAIN = 1;\n  var WOOL = 2;\n  var BRICK = 3;\n  var ORE = 4;\n\n  var mapSize = 7;\n\n  var locations = new Array(7).fill(new Array(7).fill(`#`));\n  console.log(locations[3][0]);\n  \n  //var rowLocations = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n  var x = [0,37,112,150,112,37];\n  var y = [75,10,10,75,140,140];\n\n  for(var i = 0; i < mapSize; i++){\n    //locations.push(rowLocations);\n    for(var j = 0; j < mapSize; j++){\n      \n      var auxString = `${x[0]},${y[0]} ${x[1]},${y[1]} ${x[2]},${y[2]} ${x[3]},${y[3]} ${x[4]},${y[4]} ${x[5]},${y[5]}`;\n      locations[j][i] = auxString;\n      for(var k = 0; k < x.length; k++){\n        var auxX = x[k] + 100;\n        x[k] = auxX;\n      }\n    }\n    x = [0,37,112,150,112,37];\n    for(var l = 0; l < y.length; l++){\n      var auxY = y[l];\n      y[l] = auxY;\n    }\n  }\n\n  //var locations = [[0,1,2,\"0,75 37,10 112,10 150,75 112,140 37,140\",  \"30,75 67,10 142,10 180,75 142,140 67,140\",   \"60,75 97,10 172,10 210,75 172,140 97,140\",   \"0,75 37,10 112,10 150,75 112,140 37,140\"pos7]]\n\n  var color = \"\";\n  var locX = 0;\n  var locY = 0;\n  if(entity.type === \"tile\"){\n      switch(entity.TileType){\n        case DESSERT:\n          color=\"#663300\";\n          break;\n        case SEA:\n          color=\"#663300\";\n          break;\n        case LUMBER:\n          color=\"#663300\";\n          break;\n        case GRAIN:\n          color=\"#663300\";\n          break;\n        case WOOL:\n          color=\"#663300\";\n          break;\n        case BRICK:\n          color=\"#663300\";\n          break;\n        case ORE:\n          color=\"#663300\";\n          break;\n        default:\n          color=\"#000000\";\n      }\n      \n      \n      locX = entity.row;\n      locY = entity.column;\n      \n      console.log(locations);\n      console.log(`especific loc:` +locations[locX][locY]);\n      console.log(`entity row: ` +entity.row +` entity column:` +entity.column);\n\n    \n  };\n  return (\n      <g id=\"hex\">\n        <Hex  fill={color} points={locations[locX][locY]}></Hex>\n        <text x=\"700\" y=\"700\"> {entity.TileWeight}</text>\n      </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}