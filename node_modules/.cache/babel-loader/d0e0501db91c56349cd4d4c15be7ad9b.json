{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/TFG_Catan/src/www/screens/GameScreen/GameHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { gameRefreshed, roundEnded } from \"www/store/game/actions\";\nimport { getGame } from \"www/store/game/selectors\";\nimport { useAppSelector } from \"www/store/hooks\";\nimport { ButtonDispatch } from \"www/widgets/ButtonDispatchWidget\";\nimport { LinkDispatch } from \"www/widgets/LinkDispatchWidget\";\nimport { screenPopped } from \"www/widgets/ScreenStackWidget/actions\";\nimport { getCurrentScreenName } from \"www/widgets/ScreenStackWidget/selectors\";\nimport { Bar } from \"www/theme/Bar\";\nimport { Spacer } from \"www/theme/Spacer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function GameHeader() {\n  _s();\n\n  const isGameScreen = useAppSelector(getCurrentScreenName) === \"game\";\n  const game = useAppSelector(getGame);\n  const {\n    gameName,\n    creatorName,\n    roundNumber\n  } = game;\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    color: \"lightgray\",\n    children: [!isGameScreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LinkDispatch, {\n        createAction: screenPopped,\n        children: \"\\xAB Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), \"\\xA0|\\xA0\"]\n    }, void 0, true), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-testid\": \"game-header\",\n      children: [\"Game \", gameName, \" created by \", creatorName, \", round \", roundNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonDispatch, {\n      createAction: roundEnded,\n      children: \"End Round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(ButtonDispatch, {\n      createAction: gameRefreshed,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameHeader, \"6vLuQ0A+Lpw7xt9bKHHGaX+BB5o=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n\n_c = GameHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameHeader\");","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG_Catan/src/www/screens/GameScreen/GameHeader.tsx"],"names":["gameRefreshed","roundEnded","getGame","useAppSelector","ButtonDispatch","LinkDispatch","screenPopped","getCurrentScreenName","Bar","Spacer","GameHeader","isGameScreen","game","gameName","creatorName","roundNumber"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,wBAA1C;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,oBAAT,QAAqC,yCAArC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAMC,YAAY,GAAGR,cAAc,CAACI,oBAAD,CAAd,KAAyC,MAA9D;AACA,QAAMK,IAAI,GAAGT,cAAc,CAACD,OAAD,CAA3B;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAAyCH,IAA/C;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,eACG,CAACD,YAAD,iBACC;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEL,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA,oBAFJ,EAMK,GANL,eAOE;AAAM,qBAAY,aAAlB;AAAA,0BACQO,QADR,kBAC8BC,WAD9B,cACmDC,WADnD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEd,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,uBAYE,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAED,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArBeU,U;UACOP,c,EACRA,c;;;KAFCO,U","sourcesContent":["import { gameRefreshed, roundEnded } from \"www/store/game/actions\";\nimport { getGame } from \"www/store/game/selectors\";\nimport { useAppSelector } from \"www/store/hooks\";\nimport { ButtonDispatch } from \"www/widgets/ButtonDispatchWidget\";\nimport { LinkDispatch } from \"www/widgets/LinkDispatchWidget\";\nimport { screenPopped } from \"www/widgets/ScreenStackWidget/actions\";\nimport { getCurrentScreenName } from \"www/widgets/ScreenStackWidget/selectors\";\nimport { Bar } from \"www/theme/Bar\";\nimport { Spacer } from \"www/theme/Spacer\";\n\nexport function GameHeader() {\n  const isGameScreen = useAppSelector(getCurrentScreenName) === \"game\";\n  const game = useAppSelector(getGame)!;\n  const { gameName, creatorName, roundNumber } = game;\n\n  return (\n    <Bar color=\"lightgray\">\n      {!isGameScreen && (\n        <>\n          <LinkDispatch createAction={screenPopped}>Â« Back</LinkDispatch>\n          &nbsp;|&nbsp;\n        </>\n      )}{\" \"}\n      <span data-testid=\"game-header\">\n        Game {gameName} created by {creatorName}, round {roundNumber}\n      </span>\n      <Spacer />\n      <ButtonDispatch createAction={roundEnded}>End Round</ButtonDispatch>&nbsp;\n      <ButtonDispatch createAction={gameRefreshed}>Refresh</ButtonDispatch>\n    </Bar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}