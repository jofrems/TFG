{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/TFG/src/www/screens/CreateGameScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useAppDispatch, useDispatchForm, useInputRef } from \"www/store/hooks\";\nimport { gameCreated } from \"www/store/game/actions\";\nimport { screenPopped } from \"www/widgets/ScreenStackWidget/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateGameScreen() {\n  _s();\n\n  const gameNameRef = useInputRef();\n  const createGame = useDispatchForm(gameCreated, gameNameRef);\n  const dispatch = useAppDispatch();\n  const cancel = useCallback(() => dispatch(screenPopped()), [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Game name:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: gameNameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createGame,\n      children: \"Create game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateGameScreen, \"URi57kVGNU4b33qR1NbL2LMnffc=\", false, function () {\n  return [useInputRef, useDispatchForm, useAppDispatch];\n});\n\n_c = CreateGameScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGameScreen\");","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/CreateGameScreen.tsx"],"names":["useCallback","useAppDispatch","useDispatchForm","useInputRef","gameCreated","screenPopped","CreateGameScreen","gameNameRef","createGame","dispatch","cancel"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA6D,iBAA7D;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,YAAT,QAA6B,uCAA7B;;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AACjC,QAAMC,WAAW,GAAGJ,WAAW,EAA/B;AACA,QAAMK,UAAU,GAAGN,eAAe,CAACE,WAAD,EAAcG,WAAd,CAAlC;AACA,QAAME,QAAQ,GAAGR,cAAc,EAA/B;AACA,QAAMS,MAAM,GAAGV,WAAW,CAAC,MAAMS,QAAQ,CAACJ,YAAY,EAAb,CAAf,EAAiC,CAACI,QAAD,CAAjC,CAA1B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4CAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,GAAG,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EASoD,GATpD,eAUE;AAAQ,MAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApBeJ,gB;UACMH,W,EACDD,e,EACFD,c;;;KAHHK,gB","sourcesContent":["import { useCallback } from \"react\";\nimport { useAppDispatch, useDispatchForm, useInputRef } from \"www/store/hooks\";\nimport { gameCreated } from \"www/store/game/actions\";\nimport { screenPopped } from \"www/widgets/ScreenStackWidget/actions\";\n\nexport function CreateGameScreen() {\n  const gameNameRef = useInputRef();\n  const createGame = useDispatchForm(gameCreated, gameNameRef);\n  const dispatch = useAppDispatch();\n  const cancel = useCallback(() => dispatch(screenPopped()), [dispatch]);\n\n  return (\n    <main>\n      <h1>Create game!</h1>\n      <label>\n        Game name:\n        <br />\n        <input ref={gameNameRef} />\n      </label>\n      <br />\n      <br />\n      <button onClick={createGame}>Create game</button>{\" \"}\n      <button onClick={cancel}>Cancel</button>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}