{"ast":null,"code":"import { fetchAndDispatchMessage } from \"www/widgets/MessageWidget/fetchAndDispatchMessage\";\nimport { loadingFinished, loadingStarted } from \"www/widgets/LoadingWidget/actions\";\nimport { getPlayerToken } from \"../player/selectors\";\nimport { gameReplaced } from \"./actions\";\nexport async function gamePost(store, url, body, success = () => {}) {\n  store.dispatch(loadingStarted());\n  const token = getPlayerToken(store.getState());\n  const result = await fetchAndDispatchMessage(`${url}?token=${token}`, {\n    method: \"POST\",\n    body\n  }, store.dispatch);\n  store.dispatch(gameReplaced(result));\n  await success(result);\n  store.dispatch(loadingFinished());\n}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG_Catan/src/www/store/game/gamePost.tsx"],"names":["fetchAndDispatchMessage","loadingFinished","loadingStarted","getPlayerToken","gameReplaced","gamePost","store","url","body","success","dispatch","token","getState","result","method"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,mDAAxC;AACA,SACEC,eADF,EAEEC,cAFF,QAGO,mCAHP;AAIA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,YAAT,QAA6B,WAA7B;AAGA,OAAO,eAAeC,QAAf,CACLC,KADK,EAELC,GAFK,EAGLC,IAHK,EAILC,OAAkD,GAAG,MAAM,CAAE,CAJxD,EAKL;AACAH,EAAAA,KAAK,CAACI,QAAN,CAAeR,cAAc,EAA7B;AACA,QAAMS,KAAK,GAAGR,cAAc,CAACG,KAAK,CAACM,QAAN,EAAD,CAA5B;AACA,QAAMC,MAAM,GAAG,MAAMb,uBAAuB,CACzC,GAAEO,GAAI,UAASI,KAAM,EADoB,EAE1C;AAAEG,IAAAA,MAAM,EAAE,MAAV;AAAkBN,IAAAA;AAAlB,GAF0C,EAG1CF,KAAK,CAACI,QAHoC,CAA5C;AAMAJ,EAAAA,KAAK,CAACI,QAAN,CAAeN,YAAY,CAACS,MAAD,CAA3B;AACA,QAAMJ,OAAO,CAACI,MAAD,CAAb;AAEAP,EAAAA,KAAK,CAACI,QAAN,CAAeT,eAAe,EAA9B;AACD","sourcesContent":["import { fetchAndDispatchMessage } from \"www/widgets/MessageWidget/fetchAndDispatchMessage\";\nimport {\n  loadingFinished,\n  loadingStarted,\n} from \"www/widgets/LoadingWidget/actions\";\nimport { getPlayerToken } from \"../player/selectors\";\nimport { gameReplaced } from \"./actions\";\nimport { GameState } from \"./types\";\n\nexport async function gamePost(\n  store: any,\n  url: string,\n  body: any,\n  success: (game: GameState) => Promise<void> | void = () => {}\n) {\n  store.dispatch(loadingStarted());\n  const token = getPlayerToken(store.getState());\n  const result = await fetchAndDispatchMessage(\n    `${url}?token=${token}`,\n    { method: \"POST\", body },\n    store.dispatch\n  );\n\n  store.dispatch(gameReplaced(result));\n  await success(result);\n\n  store.dispatch(loadingFinished());\n}\n"]},"metadata":{},"sourceType":"module"}