{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/HexComponent.tsx\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hex = styled.polygon`\ncursor: pointer;\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\ntransform: rotate(30deg);\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n`; //transform-origin: 50% 50%;\n//transform: rotate(30deg);\n\n_c = Hex;\nexport function HexComponent({\n  entity\n}) {\n  var SEA = -1;\n  var DESSERT = -2;\n  var LUMBER = 0;\n  var GRAIN = 1;\n  var WOOL = 2;\n  var BRICK = 3;\n  var ORE = 4; //var mapSize = 7;\n  //var locations = new Array(7).fill(new Array(7).fill(`#`));\n\n  console.log(`new hex`); //var rowLocations = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\n  var x = [0, 37, 112, 150, 112, 37];\n  var y = [75, 10, 10, 75, 140, 140];\n  /*for(var i = 0; i < mapSize; i++){\n    //locations.push(rowLocations);\n    for(var j = 0; j < mapSize; j++){\n      var auxString = `${x[0]},${y[0]} ${x[1]},${y[1]} ${x[2]},${y[2]} ${x[3]},${y[3]} ${x[4]},${y[4]} ${x[5]},${y[5]}`;\n      locations[j][i] = auxString;\n      // console.log(`line `+ i + `: `+locations[i][j]);\n       for(var k = 0; k < x.length; k++){\n        var auxX = x[k]+100;\n        x[k] = auxX;\n      }\n    }\n    x = [0,37,112,150,112,37];\n    for(var l = 0; l < y.length; l++){\n      var auxY = y[l] + 100;\n      y[l] = auxY;\n    }\n  }*/\n\n  var xOffsetDeg = 100;\n  var yOffsetDeg = 60 * entity.row;\n  var xJump = 115 * entity.row;\n  var yJump = 100 * entity.column;\n  var finalLoc = `${x[0] + xJump},${y[0] + yJump - yOffsetDeg} ${x[1] + xJump},${y[1] + yJump - yOffsetDeg} ${x[2] + xJump},${y[2] + yJump - yOffsetDeg} ${x[3] + xJump},${y[3] + yJump - yOffsetDeg} ${x[4] + xJump},${y[4] + yJump - yOffsetDeg} ${x[5] + xJump},${y[5] + yJump - yOffsetDeg}`; //var locations = [[0,1,2,\"0,75 37,10 112,10 150,75 112,140 37,140\",  \"30,75 67,10 142,10 180,75 142,140 67,140\",   \"60,75 97,10 172,10 210,75 172,140 97,140\",   \"0,75 37,10 112,10 150,75 112,140 37,140\"pos7]]\n\n  var color = \"\";\n  var locX = 0;\n  var locY = 0;\n\n  if (entity.type === \"tile\") {\n    switch (entity.TileType) {\n      case DESSERT:\n        color = \"#663300\";\n        break;\n\n      case SEA:\n        color = \"#0080FF\";\n        break;\n\n      case LUMBER:\n        color = \"#006600\";\n        break;\n\n      case GRAIN:\n        color = \"#FFFF33\";\n        break;\n\n      case WOOL:\n        color = \"#80FF00\";\n        break;\n\n      case BRICK:\n        color = \"#FF9933\";\n        break;\n\n      case ORE:\n        color = \"#C0C0C0\";\n        break;\n\n      default:\n        color = \"#000000\";\n    }\n\n    locX = entity.column;\n    locY = entity.row;\n    /* console.log(locations);\n     console.log(`especific loc:` +locations[locX][locY]);\n     console.log(`entity row/locY: ` +entity.row +` entity column/locX:` +entity.column);*/\n\n    console.log(finalLoc);\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    //<svg x='0' y='0' width='150' height='150' overflow='visible' transform=\"rotate(30deg)\">\n    _jsxDEV(\"g\", {\n      id: \"hex\",\n      children: [/*#__PURE__*/_jsxDEV(Hex, {\n        fill: color,\n        points: finalLoc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"700\",\n        y: \"700\",\n        children: [\" \", entity.TileWeight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this) //</svg>\n\n  );\n}\n_c2 = HexComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hex\");\n$RefreshReg$(_c2, \"HexComponent\");","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/GameScreen/HexComponent.tsx"],"names":["styled","Hex","polygon","HexComponent","entity","SEA","DESSERT","LUMBER","GRAIN","WOOL","BRICK","ORE","console","log","x","y","xOffsetDeg","yOffsetDeg","row","xJump","yJump","column","finalLoc","color","locX","locY","type","TileType","TileWeight"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,GAAG,GAAGD,MAAM,CAACE,OAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA,C,CAgBA;AAEA;;KAlBMD,G;AAsBN,OAAO,SAASE,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuC;AAC5C,MAAIC,GAAG,GAAG,CAAC,CAAX;AACA,MAAIC,OAAO,GAAG,CAAC,CAAf;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAG,CAAV,CAP4C,CAS5C;AAEA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAZ4C,CAc5C;;AACA,MAAIC,CAAC,GAAG,CAAC,CAAD,EAAG,EAAH,EAAM,GAAN,EAAU,GAAV,EAAc,GAAd,EAAkB,EAAlB,CAAR;AACA,MAAIC,CAAC,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,GAAb,EAAiB,GAAjB,CAAR;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,MAAIC,UAAU,GAAG,GAAjB;AACA,MAAIC,UAAU,GAAG,KAAGb,MAAM,CAACc,GAA3B;AACA,MAAIC,KAAK,GAAG,MAAIf,MAAM,CAACc,GAAvB;AACA,MAAIE,KAAK,GAAG,MAAIhB,MAAM,CAACiB,MAAvB;AACA,MAAIC,QAAQ,GAAI,GAAER,CAAC,CAAC,CAAD,CAAD,GAAMK,KAAO,IAAGJ,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAL,GAAWH,UAAW,IAAGH,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAM,IAAGJ,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAL,GAAWH,UAAW,IAAGH,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAM,IAAGJ,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAL,GAAWH,UAAW,IAAGH,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAM,IAAGJ,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAL,GAAWH,UAAW,IAAGH,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAM,IAAGJ,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAL,GAAWH,UAAW,IAAGH,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAM,IAAGJ,CAAC,CAAC,CAAD,CAAD,GAAKK,KAAL,GAAWH,UAAW,EAA3P,CA3C4C,CA4C5C;;AAEA,MAAIM,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;;AACA,MAAGrB,MAAM,CAACsB,IAAP,KAAgB,MAAnB,EAA0B;AACtB,YAAOtB,MAAM,CAACuB,QAAd;AACE,WAAKrB,OAAL;AACEiB,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF,WAAKlB,GAAL;AACEkB,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF,WAAKhB,MAAL;AACEgB,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF,WAAKf,KAAL;AACEe,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF,WAAKd,IAAL;AACEc,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF,WAAKb,KAAL;AACEa,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF,WAAKZ,GAAL;AACEY,QAAAA,KAAK,GAAC,SAAN;AACA;;AACF;AACEA,QAAAA,KAAK,GAAC,SAAN;AAvBJ;;AA2BAC,IAAAA,IAAI,GAAGpB,MAAM,CAACiB,MAAd;AACAI,IAAAA,IAAI,GAAGrB,MAAM,CAACc,GAAd;AAED;AACL;AACA;;AAEMN,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AAEH;;AAAA;AACD;AAAA;AACE;AACE;AAAG,MAAA,EAAE,EAAC,KAAN;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAEC,KAAX;AAAkB,QAAA,MAAM,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,KAAhB;AAAA,wBAAwBlB,MAAM,CAACwB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAME;;AANF;AASD;MAhGezB,Y","sourcesContent":["import styled from \"styled-components\";\n\n\nconst Hex = styled.polygon`\ncursor: pointer;\nfill-opacity: 0.4;\nstroke: #000;\nstroke-width: 1;\ntransition: transform, fill-opacity, stroke-width;\n-webkit-transition: transform, fill-opacity, stroke-width;\ntransition-duration: 1s;\n-webkit-transition-duration: 1s;;\ntransform: rotate(30deg);\n&:hover{\n  fill-opacity: 1;\n  stroke: #ff0000;\n  stroke-width: 5;\n}\n`\n//transform-origin: 50% 50%;\n\n//transform: rotate(30deg);\n\n\n\nexport function HexComponent({ entity }: any) {\n  var SEA = -1;\n  var DESSERT = -2;\n  var LUMBER = 0;\n  var GRAIN = 1;\n  var WOOL = 2;\n  var BRICK = 3;\n  var ORE = 4;\n\n  //var mapSize = 7;\n\n  //var locations = new Array(7).fill(new Array(7).fill(`#`));\n  console.log(`new hex`);\n  \n  //var rowLocations = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n  var x = [0,37,112,150,112,37];\n  var y = [75,10,10,75,140,140];\n\n\n\n  /*for(var i = 0; i < mapSize; i++){\n    //locations.push(rowLocations);\n    for(var j = 0; j < mapSize; j++){\n      var auxString = `${x[0]},${y[0]} ${x[1]},${y[1]} ${x[2]},${y[2]} ${x[3]},${y[3]} ${x[4]},${y[4]} ${x[5]},${y[5]}`;\n      locations[j][i] = auxString;\n\n     // console.log(`line `+ i + `: `+locations[i][j]);\n\n      for(var k = 0; k < x.length; k++){\n        var auxX = x[k]+100;\n        x[k] = auxX;\n      }\n    }\n    x = [0,37,112,150,112,37];\n    for(var l = 0; l < y.length; l++){\n      var auxY = y[l] + 100;\n      y[l] = auxY;\n    }\n  }*/\n  var xOffsetDeg = 100;\n  var yOffsetDeg = 60*entity.row;\n  var xJump = 115*entity.row;\n  var yJump = 100*entity.column;\n  var finalLoc = `${x[0]+ xJump },${y[0]+yJump-yOffsetDeg} ${x[1]+xJump},${y[1]+yJump-yOffsetDeg} ${x[2]+xJump},${y[2]+yJump-yOffsetDeg} ${x[3]+xJump},${y[3]+yJump-yOffsetDeg} ${x[4]+xJump},${y[4]+yJump-yOffsetDeg} ${x[5]+xJump},${y[5]+yJump-yOffsetDeg}`\n  //var locations = [[0,1,2,\"0,75 37,10 112,10 150,75 112,140 37,140\",  \"30,75 67,10 142,10 180,75 142,140 67,140\",   \"60,75 97,10 172,10 210,75 172,140 97,140\",   \"0,75 37,10 112,10 150,75 112,140 37,140\"pos7]]\n\n  var color = \"\";\n  var locX = 0;\n  var locY = 0;\n  if(entity.type === \"tile\"){\n      switch(entity.TileType){\n        case DESSERT:\n          color=\"#663300\";\n          break;\n        case SEA:\n          color=\"#0080FF\";\n          break;\n        case LUMBER:\n          color=\"#006600\";\n          break;\n        case GRAIN:\n          color=\"#FFFF33\";\n          break;\n        case WOOL:\n          color=\"#80FF00\";\n          break;\n        case BRICK:\n          color=\"#FF9933\";\n          break;\n        case ORE:\n          color=\"#C0C0C0\";\n          break;\n        default:\n          color=\"#000000\";\n      }\n      \n      \n      locX = entity.column;\n      locY = entity.row;\n      \n     /* console.log(locations);\n      console.log(`especific loc:` +locations[locX][locY]);\n      console.log(`entity row/locY: ` +entity.row +` entity column/locX:` +entity.column);*/\n\n      console.log(finalLoc);\n    \n  };\n  return (\n    //<svg x='0' y='0' width='150' height='150' overflow='visible' transform=\"rotate(30deg)\">\n      <g id=\"hex\">\n        <Hex fill={color} points={finalLoc}></Hex>\n        <text x=\"700\" y=\"700\"> {entity.TileWeight}</text>\n      </g>\n    //</svg>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}