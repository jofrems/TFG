{"ast":null,"code":"import{useCallback}from\"react\";import{useAppDispatch}from\"www/store/hooks\";import{postPushed}from\"www/screens/PostScreen/actions\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export function BlogItem(_ref){var post=_ref.post;var dispatch=useAppDispatch();var goToPost=useCallback(function(){dispatch(postPushed(post.id));},[dispatch,post]);var _post$frontMatter=post.frontMatter,writer=_post$frontMatter.writer,coder=_post$frontMatter.coder;return/*#__PURE__*/_jsxs(\"li\",{onClick:goToPost,style:{color:!coder?\"red\":\"inherit\"},children:[/*#__PURE__*/_jsxs(\"code\",{children:[\"[\",post.id.slice(0,10),\"]\"]}),\" \",/*#__PURE__*/_jsx(\"span\",{role:\"link\",children:post.title}),/*#__PURE__*/_jsxs(\"small\",{children:[\" by \",writer]}),/*#__PURE__*/_jsxs(\"small\",{children:[\", impl. \",coder]})]});}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG/src/www/screens/BlogScreen/BlogItem.tsx"],"names":["useCallback","useAppDispatch","postPushed","BlogItem","post","dispatch","goToPost","id","frontMatter","writer","coder","color","slice","title"],"mappings":"AAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,cAAT,KAA+B,iBAA/B,CACA,OAASC,UAAT,KAA2B,gCAA3B,C,wFAGA,MAAO,SAASC,CAAAA,QAAT,MAAiD,IAA7BC,CAAAA,IAA6B,MAA7BA,IAA6B,CACtD,GAAMC,CAAAA,QAAQ,CAAGJ,cAAc,EAA/B,CACA,GAAMK,CAAAA,QAAQ,CAAGN,WAAW,CAAC,UAAM,CACjCK,QAAQ,CAACH,UAAU,CAACE,IAAI,CAACG,EAAN,CAAX,CAAR,CACD,CAF2B,CAEzB,CAACF,QAAD,CAAWD,IAAX,CAFyB,CAA5B,CAFsD,sBAK5BA,IAAI,CAACI,WALuB,CAK9CC,MAL8C,mBAK9CA,MAL8C,CAKtCC,KALsC,mBAKtCA,KALsC,CAOtD,mBACE,YAAI,OAAO,CAAEJ,QAAb,CAAuB,KAAK,CAAE,CAAEK,KAAK,CAAE,CAACD,KAAD,CAAS,KAAT,CAAiB,SAA1B,CAA9B,wBACE,4BAAQN,IAAI,CAACG,EAAL,CAAQK,KAAR,CAAc,CAAd,CAAiB,EAAjB,CAAR,OADF,CACwC,GADxC,cAEE,aAAM,IAAI,CAAC,MAAX,UAAmBR,IAAI,CAACS,KAAxB,EAFF,cAGE,gCAAYJ,MAAZ,GAHF,cAIE,oCAAgBC,KAAhB,GAJF,GADF,CAQD","sourcesContent":["import { useCallback } from \"react\";\nimport { useAppDispatch } from \"www/store/hooks\";\nimport { postPushed } from \"www/screens/PostScreen/actions\";\nimport { BlogEntry } from \"./types\";\n\nexport function BlogItem({ post }: { post: BlogEntry }) {\n  const dispatch = useAppDispatch();\n  const goToPost = useCallback(() => {\n    dispatch(postPushed(post.id));\n  }, [dispatch, post]);\n  const { writer, coder } = post.frontMatter;\n\n  return (\n    <li onClick={goToPost} style={{ color: !coder ? \"red\" : \"inherit\" }}>\n      <code>[{post.id.slice(0, 10)}]</code>{\" \"}\n      <span role=\"link\">{post.title}</span>\n      <small> by {writer}</small>\n      <small>, impl. {coder}</small>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}