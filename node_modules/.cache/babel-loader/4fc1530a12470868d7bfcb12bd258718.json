{"ast":null,"code":"import { loadingFinished, loadingStarted } from \"www/widgets/LoadingWidget/actions\";\nimport { screenPushed } from \"www/widgets/ScreenStackWidget/actions\";\nimport { blogReplaced } from \"./actions\";\nimport { BLOG_PUSHED } from \"./types\";\nexport const blogMiddleware = store => next => async action => {\n  next(action);\n  if (action.type === BLOG_PUSHED) await blogPushed(store);\n};\n\nasync function blogPushed(store) {\n  store.dispatch(loadingStarted());\n  const response = await fetch(\"/api/v1/posts\");\n  const blog = await response.json();\n  store.dispatch(blogReplaced(blog.posts));\n  store.dispatch(screenPushed(\"blog\"));\n  store.dispatch(loadingFinished());\n}","map":{"version":3,"sources":["/Users/jeff/Desktop/TFG_Catan/src/www/screens/BlogScreen/middleware.ts"],"names":["loadingFinished","loadingStarted","screenPushed","blogReplaced","BLOG_PUSHED","blogMiddleware","store","next","action","type","blogPushed","dispatch","response","fetch","blog","json","posts"],"mappings":"AAEA,SACEA,eADF,EAEEC,cAFF,QAGO,mCAHP;AAIA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,MAAMC,cAAwC,GAClDC,KAAD,IAAiBC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AAC1CD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBL,WAApB,EAAiC,MAAMM,UAAU,CAACJ,KAAD,CAAhB;AAClC,CALI;;AAOP,eAAeI,UAAf,CAA0BJ,KAA1B,EAAsC;AACpCA,EAAAA,KAAK,CAACK,QAAN,CAAeV,cAAc,EAA7B;AAEA,QAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,EAAAA,KAAK,CAACK,QAAN,CAAeR,YAAY,CAACW,IAAI,CAACE,KAAN,CAA3B;AACAV,EAAAA,KAAK,CAACK,QAAN,CAAeT,YAAY,CAAC,MAAD,CAA3B;AAEAI,EAAAA,KAAK,CAACK,QAAN,CAAeX,eAAe,EAA9B;AACD","sourcesContent":["import { Middleware } from \"redux\";\nimport { AppState } from \"www/store\";\nimport {\n  loadingFinished,\n  loadingStarted,\n} from \"www/widgets/LoadingWidget/actions\";\nimport { screenPushed } from \"www/widgets/ScreenStackWidget/actions\";\nimport { blogReplaced } from \"./actions\";\nimport { BLOG_PUSHED } from \"./types\";\n\nexport const blogMiddleware: Middleware<{}, AppState> =\n  (store: any) => (next) => async (action) => {\n    next(action);\n\n    if (action.type === BLOG_PUSHED) await blogPushed(store);\n  };\n\nasync function blogPushed(store: any) {\n  store.dispatch(loadingStarted());\n\n  const response = await fetch(\"/api/v1/posts\");\n  const blog = await response.json();\n  store.dispatch(blogReplaced(blog.posts));\n  store.dispatch(screenPushed(\"blog\"));\n\n  store.dispatch(loadingFinished());\n}\n"]},"metadata":{},"sourceType":"module"}